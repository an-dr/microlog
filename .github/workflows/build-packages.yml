# Builds all types of distribution packages for Microlog:
# - CMake
# - Meson
# - Source

name: Build Packages

on:
  workflow_call:

jobs:
  build-cmake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run build script
        run: pwsh -File ./scripts/build_cmake.ps1

      - name: Read version and set artifact name
        run: echo "ARTIFACT_CMAKE=microlog-$(cat ./version)-cmake" >> $GITHUB_ENV

      - name: Create ZIP archive
        run: |
          cd install/cmake
          zip -r ${{ env.ARTIFACT_CMAKE }}.zip .

      - name: Upload CMake package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_CMAKE }}
          path: install/cmake/${{ env.ARTIFACT_CMAKE }}.zip

  build-meson:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Meson and Ninja
        run: |
          sudo apt update
          sudo apt install -y meson ninja-build

      - name: Run build script
        run: pwsh -File ./scripts/build_meson.ps1

      - name: Read version and set artifact name
        run: echo "ARTIFACT_MESON=microlog-$(cat ./version)-meson" >> $GITHUB_ENV

      - name: Create ZIP archive
        run: |
          cd install/meson
          zip -r ${{ env.ARTIFACT_MESON }}.zip .

      - name: Upload Meson package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_MESON }}
          path: install/meson/${{ env.ARTIFACT_MESON }}.zip

  build-src:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run build script
        run: pwsh -File ./scripts/build_src.ps1

      - name: Read version and set artifact name
        run: echo "ARTIFACT_SRC=microlog-$(cat ./version)-src" >> $GITHUB_ENV

      - name: Create ZIP archive
        run: |
          cd install/src
          zip -r ${{ env.ARTIFACT_SRC }}.zip .

      - name: Upload CMake package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_SRC }}
          path: install/src/${{ env.ARTIFACT_SRC }}.zip
