# Creates a GitHub Release and uploads artifacts from previous steps.
# Require artifacts:
# - env.ARTIFACT_CMAKE
# - env.ARTIFACT_MESON
# - env.ARTIFACT_ARDUINO

name: Release

on:
  workflow_call:

jobs:
  build-cmake:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.set-package-name.outputs.package_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Package Name
        id: set-package-name
        run: echo "package_name=microlog-$(cat ./version)-cmake" >> $GITHUB_OUTPUT

      - name: Run build script
        run: pwsh -File ./scripts/build_cmake.ps1

      - name: Create ZIP archive
        env:
          ARTIFACT_CMAKE: ${{ steps.set-package-name.outputs.package_name }}
        run: |
          cd install/cmake
          zip -r ${{ env.ARTIFACT_CMAKE }}.zip .

      - name: Upload CMake package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-package-name.outputs.package_name }}
          path: install/cmake/${{ steps.set-package-name.outputs.package_name }}.zip

  build-meson:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.set-package-name.outputs.package_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set package name
        id: set-package-name
        run: echo "package_name=microlog-$(cat ./version)-meson" >> $GITHUB_OUTPUT

      - name: Install Meson and Ninja
        run: |
          sudo apt update
          sudo apt install -y meson ninja-build

      - name: Run build script
        run: pwsh -File ./scripts/build_meson.ps1

      - name: Create ZIP archive
        run: |
          cd install/meson
          zip -r ${{ steps.set-package-name.outputs.package_name }}.zip .

      - name: Upload Meson package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-package-name.outputs.package_name }}
          path: install/meson/${{ steps.set-package-name.outputs.package_name }}.zip

  build-src:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.set-package-name.outputs.package_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set package name
        id: set-package-name
        run: echo "package_name=microlog-$(cat ./version)-src" >> $GITHUB_OUTPUT

      - name: Run build script
        run: pwsh -File ./scripts/build_src.ps1

      - name: Create ZIP archive
        run: |
          cd install/src
          zip -r ${{ steps.set-package-name.outputs.package_name }}.zip .

      - name: Upload Source package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-package-name.outputs.package_name }}
          path: install/src/${{ steps.set-package-name.outputs.package_name }}.zip

  build-wrap:
    runs-on: ubuntu-latest
    outputs:
      wrap-name: ${{ steps.set-wrap-name.outputs.wrap_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate meson wrap file
        run: pwsh -File ./scripts/build_meson_wrap.ps1

      - name: Upload wrap file
        uses: actions/upload-artifact@v4
        with:
          name: meson-wrap-file
          path: ./install/wrap/microlog.wrap

  build-arduino:
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.set-package-name.outputs.package_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set package name
        id: set-package-name
        run: echo "package_name=microlog-$(cat ./version)-arduino" >> $GITHUB_OUTPUT

      - name: Run build script
        run: pwsh -File ./scripts/build_arduino.ps1

      - name: Upload Arduino package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-package-name.outputs.package_name }}
          path: install/arduino/microlog-*.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-cmake, build-meson, build-src, build-wrap, build-arduino]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download CMake artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-cmake.outputs.package-name }}
          path: ./release-artifacts

      - name: Download Meson artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-meson.outputs.package-name }}
          path: ./release-artifacts

      - name: Download Source artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-src.outputs.package-name }}
          path: ./release-artifacts

      - name: Download Meson wrap file
        uses: actions/download-artifact@v4
        with:
          name: meson-wrap-file
          path: ./release-artifacts

      - name: Download Arduino artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-arduino.outputs.package-name }}
          path: ./release-artifacts

      - name: Create GitHub Release and Upload Artifact
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
